plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.lbd.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/lbd/example/domain/**",
					"com/lbd/example/entity/**",
					"**/config/*"
			])
		}))
	}
}

jacoco {

	reportsDir = file("$buildDir/jacoco")
}



tasks.named('test') {
	useJUnitPlatform()
}
